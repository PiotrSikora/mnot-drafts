



Network Working Group                                      M. Nottingham
Internet-Draft                                                    Fastly
Intended status: Informational                          January 17, 2019
Expires: July 21, 2019


                  The Gateway-Error HTTP Header Field
                   draft-nottingham-gateway-error-00

Abstract

   This document defines the Gateway-Error HTTP header field to convey
   the details of errors generated by HTTP gateways.

Note to Readers

   _RFC EDITOR: please remove this section before publication_

   The issues list for this draft can be found at
   https://github.com/mnot/I-D/labels/gateway-error [1].

   The most recent (often, unpublished) draft is at
   https://mnot.github.io/I-D/gateway-error/ [2].

   See also the draft's current status in the IETF datatracker, at
   https://datatracker.ietf.org/doc/draft-nottingham-gateway-error/ [3].

   Precursors that informed this work include (but are not limited to):

   o  https://docs.fastly.com/guides/debugging/common-503-errors

   o  https://support.cloudflare.com/hc/en-us/sections/200820298-Error-
      Pages

   o  https://cloud.google.com/load-balancing/docs/https/https-logging-
      monitoring

   o  https://docs.google.com/document/
      d/1fMEK80KlpHcL4CwhniOupgQu4MDsxK4y4dKhthjjCMA

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute




Nottingham                Expires July 21, 2019                 [Page 1]

Internet-Draft                Gateway-Error                 January 2019


   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 21, 2019.

Copyright Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   3
     1.1.  Notational Conventions  . . . . . . . . . . . . . . . . .   3
   2.  The Gateway-Error HTTP Header Field . . . . . . . . . . . . .   4
     2.1.  Generic Gateway Error Parameters  . . . . . . . . . . . .   5
   3.  Gateway Error Types . . . . . . . . . . . . . . . . . . . . .   5
     3.1.  Origin Not Found  . . . . . . . . . . . . . . . . . . . .   5
     3.2.  Origin DNS Timeout  . . . . . . . . . . . . . . . . . . .   6
     3.3.  Origin DNS Error  . . . . . . . . . . . . . . . . . . . .   6
     3.4.  Origin IP Prohibited  . . . . . . . . . . . . . . . . . .   6
     3.5.  Origin IP Unroutable  . . . . . . . . . . . . . . . . . .   6
     3.6.  Origin Connection Refused . . . . . . . . . . . . . . . .   7
     3.7.  Origin Connection Closed  . . . . . . . . . . . . . . . .   7
     3.8.  Origin Connect Timeout  . . . . . . . . . . . . . . . . .   7
     3.9.  Origin Read Timeout . . . . . . . . . . . . . . . . . . .   7
     3.10. Origin Write Timeout  . . . . . . . . . . . . . . . . . .   8
     3.11. Origin Down . . . . . . . . . . . . . . . . . . . . . . .   8
     3.12. Origin Connection Limit Reached . . . . . . . . . . . . .   8
     3.13. Origin HTTP Error Status  . . . . . . . . . . . . . . . .   8
     3.14. Origin HTTP Incomplete Response . . . . . . . . . . . . .   9
     3.15. Origin HTTP Protocol Error  . . . . . . . . . . . . . . .   9
     3.16. Origin HTTP Response Header Block Too Large . . . . . . .   9



Nottingham                Expires July 21, 2019                 [Page 2]

Internet-Draft                Gateway-Error                 January 2019


     3.17. Origin HTTP Response Header Too Large . . . . . . . . . .   9
     3.18. Origin HTTP Response Body Too Large . . . . . . . . . . .  10
     3.19. Origin HTTP Transfer-Coding Error . . . . . . . . . . . .  10
     3.20. Origin HTTP Content-Coding Error  . . . . . . . . . . . .  10
     3.21. Origin TLS Error  . . . . . . . . . . . . . . . . . . . .  11
     3.22. Gateway Internal Error  . . . . . . . . . . . . . . . . .  11
     3.23. Request Error . . . . . . . . . . . . . . . . . . . . . .  11
   4.  Defining New Gateway Error Types  . . . . . . . . . . . . . .  12
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12
   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  13
   7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  13
     7.1.  Normative References  . . . . . . . . . . . . . . . . . .  13
     7.2.  URIs  . . . . . . . . . . . . . . . . . . . . . . . . . .  14
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  14

1.  Introduction

   A gateway is defined by [RFC7230] as "an intermediary that acts as an
   origin server for the outbound connection but translates received
   requests and forwards them inbound to another server or servers."
   They have increasingly become a significant part of HTTP deployments.
   Reverse Proxies and Content Delivery Networks (CDNs) form part of the
   critical infrastructure of many Web sites.

   Typically, HTTP gateways forward requests to a configured origin
   server and then forward their responses back to clients.  However, if
   an error occurs, the response is generated by the gateway itself.

   HTTP accommodates these types of errors with a few status codes;
   specifically, 502 Bad Gateway and 504 Gateway Timeout.  However,
   experience has shown that more information is necessary to aid
   debugging and communicate what's happened to the client.

   To address this, Section 2 defines a new HTTP response header field
   to convey such information, using the Gateway Error Types defined in
   Section 3.  Section 4 explains how to define new Gateway Error Types.

1.1.  Notational Conventions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in BCP
   14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

   This specification uses Structured Headers
   [I-D.ietf-httpbis-header-structure] to specify syntax.  The terms sh-




Nottingham                Expires July 21, 2019                 [Page 3]

Internet-Draft                Gateway-Error                 January 2019


   param-list, sh-item, sh-string, sh-token and sh-integer refer to the
   structured types defined therein.

2.  The Gateway-Error HTTP Header Field

   The Gateway-Error HTTP response header field allows a gateway to
   indicate the nature and details of an error condition it encounters
   when servicing a request.

   It is a Structured Headers [I-D.ietf-httpbis-header-structure]
   Parameterised List, where each item in the list indicates an error
   condition.  Typically, it will have only one param-item (the error
   condition that triggered generation of the response it occurs
   within), but more than one value is not prohibited.

   Each param-item's primary-id is a Gateway Error Type, a registered
   value that indicates the nature of the error.

   Each param-item can have zero to many parameters.  Section 2.1 lists
   parameters that can be used with all Gateway Error Types; individual
   types can define additional parameters to use with them.  All
   parameters are optional; see Section 6 for their potential security
   impact.

   For example:

   HTTP/1.1 504 Gateway Timeout
   Gateway-Error: origin_connect_timeout; gateway_id=FooCDN;
     origin_id=abc; origin_tries=3

   indicates the specific nature of the timeout as a connect timeout to
   the origin with the identifier "abc", and that is was generated by
   the gateway that identifies itself as "FooCDN."  Furthermore, three
   connection attempts were made.

   Or:

   HTTP/1.1 429 Too Many Requests
   Gateway-Error: request_error; gateway_id=BarReverseProxy

   indicates that this 429 Too Many Requests response was generated by
   the gateway, not the origin.

   Each Gateway Error Type has a Recommended HTTP Status Code.  When
   generating a HTTP response containing Gateway-Error, its http status
   code SHOULD be set to the Recommended HTTP Status Code.  However,
   there may be circumstances (e.g., for backwards compatibility with
   previous behaviours) when another status code might be used.



Nottingham                Expires July 21, 2019                 [Page 4]

Internet-Draft                Gateway-Error                 January 2019


   Section 3 lists the Gateway Error Types defined in this document; new
   ones can be defined using the procedure outlined in Section 4.

   Note that there are various security considerations for gateways
   using the Gateway-Error header field; see Section 6.

   Origin servers MUST NOT generate the Gateway-Error header field.

2.1.  Generic Gateway Error Parameters

   This section lists parameters that are potentially applicable to most
   Gateway Error Types.

   o  gateway_id - a sh-token identifying the gateway generating this
      response.

   o  origin_id - a sh-token identifying the origin whose behaviour
      triggered this response.

   o  origin_protocol - a sh-token indicating the ALPN protocol
      identifier [RFC7301] used to connect to the origin.  This is only
      applicable when the origin connection was actually established.

   o  origins_tried - a sh-integer indicating the number of origins that
      have been tried before generating this error.

   o  origin_tries - a sh-integer indicating the number of times that
      the error specified has occurred on the origin XXX.

   o  note - a sh-string containing additional information not captured
      anywhere else.  This can include implementation-specific or
      deployment-specific information.

3.  Gateway Error Types

   This section lists the Gateway Error Types defined by this document.
   See Section 4 for information about defining new Gateway Error Types.

3.1.  Origin Not Found

   o  Name: origin_not_found

   o  Description: The gateway cannot determine the appropriate origin
      to use for this request; for example, it may not be configured.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 500



Nottingham                Expires July 21, 2019                 [Page 5]

Internet-Draft                Gateway-Error                 January 2019


3.2.  Origin DNS Timeout

   o  Name: origin_dns_timeout

   o  Description: The gateway encountered a timeout when trying to find
      an IP address for the origin's hostname.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 504

3.3.  Origin DNS Error

   o  Name: origin_dns_error

   o  Description: The gateway encountered a DNS error when trying to
      find an IP address for the origin's hostname.

   o  Extra Parameters:

      *  rcode: A sh-string conveying the DNS RCODE that indicates the
         error type.  See [RFC8499], Section 3.

   o  Recommended HTTP status code: 502

3.4.  Origin IP Prohibited

   o  Name: origin_ip_prohibited

   o  Description: The gateway is configured to prohibit connections to
      the origin's IP address.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 502

3.5.  Origin IP Unroutable

   o  Name: origin_ip_unroutable

   o  Description: The gateway cannot find a route to the origin's IP
      address.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 502





Nottingham                Expires July 21, 2019                 [Page 6]

Internet-Draft                Gateway-Error                 January 2019


3.6.  Origin Connection Refused

   o  Name: origin_connection_refused

   o  Description: The gateway's connection to the origin was refused by
      the origin or an intervening network element.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 502

3.7.  Origin Connection Closed

   o  Name: origin_connection_closed

   o  Description: The gateway's connection to the origin was closed
      before any part of the response was received.  If some part was
      received, see origin_http_incomplete.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 502

3.8.  Origin Connect Timeout

   o  Name: origin_connect_timeout

   o  Description: The gateway's attempt to connect to the origin timed
      out.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 504

3.9.  Origin Read Timeout

   o  Name: origin_read_timeout

   o  Description: The gateway expect

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 504








Nottingham                Expires July 21, 2019                 [Page 7]

Internet-Draft                Gateway-Error                 January 2019


3.10.  Origin Write Timeout

   o  Name: origin_write_timeout

   o  Description:

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 504

3.11.  Origin Down

   o  Name: origin_down

   o  Description: The gateway considers the origin to be unavailable;
      e.g., recent attempts to communicate with it may have failed, or a
      health check may indicate that it is down.

   o  Extra Parameters:

   o  Recommended HTTP status code: 500

3.12.  Origin Connection Limit Reached

   o  Name: origin_connnection_limit

   o  Description: The gateway is configured to limit the number of
      connections it has to the origin, and that limit has been passed.

   o  Extra Parameters: None.

   o  Recommended HTTP status code:

3.13.  Origin HTTP Error Status

   o  Name: origin_http_error_status

   o  Description: The gateway has encountered a 4xx or 5xx status code
      from the origin server, and

   o  Extra Parameters: None.

   o  Recommended HTTP status code:








Nottingham                Expires July 21, 2019                 [Page 8]

Internet-Draft                Gateway-Error                 January 2019


3.14.  Origin HTTP Incomplete Response

   o  Name: origin_http_incomplete

   o  Description: The gateway received an incomplete response to the
      request from the origin.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: 502

3.15.  Origin HTTP Protocol Error

   o  Name: origin_http_protocol

   o  Description: The gateway encountered a HTTP protocol error when
      communicating with the origin.  This error should only be used
      when a more specific one is not defined.

   o  Extra Parameters:

      *  details: a sh-string containing details about the error
         condition.  For example, this might be the HTTP/2 error code or
         free-form text describing the condition.

   o  Recommended HTTP status code: 502

3.16.  Origin HTTP Response Header Block Too Large

   o  Name: origin_http_response_header_block_size

   o  Description: The gateway received a response to the request whose
      header block was considered too large.

   o  Extra Parameters:

      *  header_block_size: a sh-integer indicating how large the
         headers received were.  Note that they might not be complete;
         i.e., the gateway may have discarded or refused additional
         data.

   o  Recommended HTTP status code: 502

3.17.  Origin HTTP Response Header Too Large

   o  Name: origin_http_response_header_size





Nottingham                Expires July 21, 2019                 [Page 9]

Internet-Draft                Gateway-Error                 January 2019


   o  Description: The gateway received a response to the request
      containing an individual header line that was considered too
      large.

   o  Extra Parameters:

      *  header_name: a sh-string indicating the name of the header that
         triggered the error.

   o  Recommended HTTP status code: 502

3.18.  Origin HTTP Response Body Too Large

   o  Name: origin_http_response_body_size

   o  Description: The gateway received a response to the request whose
      body was considered too large.

   o  Extra Parameters:

      *  body_size: a sh-integer indicating how large the body received
         was.  Note that it may not have been complete; i.e., the
         gateway may have discarded or refused additional data.

   o  Recommended HTTP status code: 502

3.19.  Origin HTTP Transfer-Coding Error

   o  Name: origin_http_transfer_coding

   o  Description: The gateway encountered an error decoding the
      transfer-coding of the origin's response.

   o  Extra Parameters:

      *  coding: a sh-token containing the specific coding that caused
         the error.

      *  details: a sh-string containing details about the error
         condition.

   o  Recommended HTTP status code: 502

3.20.  Origin HTTP Content-Coding Error

   o  Name: origin_http_content_coding





Nottingham                Expires July 21, 2019                [Page 10]

Internet-Draft                Gateway-Error                 January 2019


   o  Description: The gateway encountered an error decoding the
      content-coding of the origin's response.

   o  Extra Parameters:

      *  coding: a sh-token containing the specific coding that caused
         the error.

      *  details: a sh-string containing details about the error
         condition.

   o  Recommended HTTP status code: 502

3.21.  Origin TLS Error

   o  Name: origin_tls_error

   o  Description: The gateway encountered a TLS error when
      communicating with the origin.

   o  Extra Parameters:

      *  alert_message: a sh-token containing the applicable description
         string from the TLS Alerts registry.

   o  Recommended HTTP status code: 502

3.22.  Gateway Internal Error

   o  Name: gateway_internal_error

   o  Description: The gateway encountered an internal error unrelated
      to the origin.

   o  Extra Parameters:

      *  details: a sh-string containing details about the error
         condition.

   o  Recommended HTTP status code: 500

3.23.  Request Error

   o  Name: request_error

   o  Description: The gateway is generating a client (4xx) response on
      the origin's behalf.  Applicable status codes include (but are not
      limited to) 400, 403, 405, 406, 408, 411, 413, 414, 415, 416, 417,



Nottingham                Expires July 21, 2019                [Page 11]

Internet-Draft                Gateway-Error                 January 2019


      429.  This gateway error code helps distinguish between responses
      generated by the gateway from those generated by the origin.

   o  Extra Parameters: None.

   o  Recommended HTTP status code: The applicable 4xx status code

4.  Defining New Gateway Error Types

   New Gateway Error Types can be defined by registering them in the
   HTTP Gateway Error Types registry.

   Registration requests are reviewed and approved by a Designated
   Expert, as per [RFC8126] Section 4.5.  A specification document is
   appreciated, but not required.

   The Expert(s) should consider the following factors when evaluating
   requests:

   o  Community feedback

   o  If the value is sufficiently well-defined

   o  If the value is generic; vendor-specific, application-specific and
      deployment-specific values are discouraged

   Registration requests should use the following template:

   o  Name: [a name for the Gateway Error Type that is allowable as a
      sh-param-list key]

   o  Description: [a description of the conditions that generate the
      Gateway Error Types]

   o  Extra Parameters: [zero or more optional parameters, typed using
      one of the types available in sh-item]

   o  Recommended HTTP status code: [the appropriate HTTP status code
      for this entry]

   See the registry at https://iana.org/assignments/http-gateway-errors
   [4] for details on where to send registration requests.

5.  IANA Considerations

   Upon publication, please create the HTTP Gateway Error Types registry
   at https://iana.org/assignments/http-gateway-errors [5] and populate




Nottingham                Expires July 21, 2019                [Page 12]

Internet-Draft                Gateway-Error                 January 2019


   it with the types defined in Section 3; see Section 4 for its
   associated procedures.

6.  Security Considerations

   One of the primary security concerns when using Gateway-Error is
   leaking information that might aid an attacker.

   As a result, care needs to be taken when deciding to generate a
   Gateway-Error header.  Note that gateways are not required to
   generate a Gateway-Header header field in any response, and can
   conditionally generate them based upon request attributes (e.g.,
   authentication tokens, IP address).

   Likewise, generation of all parameters is optional.

   Special care needs to be taken in generating gateway_id and origin_id
   parameters, as they can expose information about the gateway's
   configuration and back-end topology.

7.  References

7.1.  Normative References

   [I-D.ietf-httpbis-header-structure]
              Nottingham, M. and P. Kamp, "Structured Headers for HTTP",
              draft-ietf-httpbis-header-structure-09 (work in progress),
              December 2018.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/info/rfc2119>.

   [RFC7230]  Fielding, R., Ed. and J. Reschke, Ed., "Hypertext Transfer
              Protocol (HTTP/1.1): Message Syntax and Routing",
              RFC 7230, DOI 10.17487/RFC7230, June 2014,
              <https://www.rfc-editor.org/info/rfc7230>.

   [RFC7301]  Friedl, S., Popov, A., Langley, A., and E. Stephan,
              "Transport Layer Security (TLS) Application-Layer Protocol
              Negotiation Extension", RFC 7301, DOI 10.17487/RFC7301,
              July 2014, <https://www.rfc-editor.org/info/rfc7301>.

   [RFC8126]  Cotton, M., Leiba, B., and T. Narten, "Guidelines for
              Writing an IANA Considerations Section in RFCs", BCP 26,
              RFC 8126, DOI 10.17487/RFC8126, June 2017,
              <https://www.rfc-editor.org/info/rfc8126>.



Nottingham                Expires July 21, 2019                [Page 13]

Internet-Draft                Gateway-Error                 January 2019


   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/info/rfc8174>.

   [RFC8499]  Hoffman, P., Sullivan, A., and K. Fujiwara, "DNS
              Terminology", BCP 219, RFC 8499, DOI 10.17487/RFC8499,
              January 2019, <https://www.rfc-editor.org/info/rfc8499>.

7.2.  URIs

   [1] https://github.com/mnot/I-D/labels/gateway-error

   [2] https://mnot.github.io/I-D/gateway-error/

   [3] https://datatracker.ietf.org/doc/draft-nottingham-gateway-error/

   [4] https://iana.org/assignments/http-gateway-errors

   [5] https://iana.org/assignments/http-gateway-errors

Author's Address

   Mark Nottingham
   Fastly

   Email: mnot@mnot.net
   URI:   https://www.mnot.net/
























Nottingham                Expires July 21, 2019                [Page 14]
