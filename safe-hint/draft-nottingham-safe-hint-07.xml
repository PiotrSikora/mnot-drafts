<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.9 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc tocdepth="1"?>

<rfc ipr="trust200902" docName="draft-nottingham-safe-hint-07" category="info">

  <front>
    <title abbrev="Preference for Safe Browsing">The "safe" HTTP Preference</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2018"/>

    <area>General</area>
    
    <keyword>safe</keyword> <keyword>preference</keyword> <keyword>child-protection</keyword>

    <abstract>


<t>This specification defines a “safe” preference for HTTP requests that expresses a desire to avoid
objectionable content, according to the definition of that term by the origin server.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Many Web sites have a “safe” mode, to assist those who don’t want to be exposed (or have their
children exposed) to objectionable content.</t>

<t>However, that goal is often difficult to achieve, because of the need to go to every Web site that
might be used, navigate to the appropriate page (possibly creating an account along the way) to get
a cookie <xref target="RFC6265"/> set in the browser, for each browser on every device used.</t>

<t>A more manageable approach is for the browser to proactively indicate a preference for safe
content. A user agent that supports doing so (whether it be an individual browser, or through an
Operating System HTTP library) need only be configured once to assure that the preference is
advertised to a set of sites, or even all sites.</t>

<t>This specification defines how to declare this desire in requests as a HTTP Preference <xref target="RFC7240"/>.</t>

<t>Note that this specification does not precisely define what “safe” is; rather, it is interpreted
within the scope of each Web site that chooses to act upon this information.</t>

<t>That said, the intent of “safe” is to allow end users (or those acting on their behalf) to express
a desire to avoid content that is considered objectionable within the cultural context of that
site; usually (but not always) content that is unsuitable for minors. The “safe” preference ought
not be used for other purposes.</t>

<t>Furthermore, sending “safe” does not guarantee that the Web site will use it. As such, its effect
can be described as “best effort,” but not to be relied upon. In other words, sending the
preference is no more reliable than going to each Web site and manually selecting a “safe” mode,
but it is considerably easier.</t>

<t>It is also important to note that the “safe” preference is not a reliable indicator that the end
user is a child; other users might have a desire for unobjectionable content, and some children
might browse without the preference being set.</t>

<t>Simply put, it is a statement by (or on behalf of) the end user to the effect “If your site has a
‘safe’ setting, this user is hereby opting into that, according to your definition of the term.”</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="safe" title="The “safe” Preference">

<t>When present in a request, the “safe” preference indicates that the content which is not
objectionable is preferred, according to the origin server’s definition of the concept.</t>

<t>For example, a request that includes the “safe” preference:</t>

<figure><artwork><![CDATA[
GET /foo.html HTTP/1.1
Host: www.example.org
User-Agent: ExampleBrowser/1.0
Prefer: safe
]]></artwork></figure>

<t>User agents SHOULD include the “safe” preference in all HTTPS requests unless otherwise configured,
to ensure that the preference is available to the applicable resources. See <xref target="browsers"/> for more
information about configuring the set of resources “safe” is sent to.</t>

<t>Safe MAY be implemented in common HTTP libraries (e.g., an operating system might choose to insert
the preference in requests based upon system-wide configuration).</t>

<t>Origin servers that utilize the “safe” preference ought to document that they do so, along with the
criteria that they use to denote objectionable content. If a server has more fine-grained degrees
of “safety”, it SHOULD select a reasonable default to use, and document that; it MAY use additional
mechanisms (e.g., cookies <xref target="RFC6265"/>) to fine-tune.</t>

<t>A response corresponding to the request above might have headers that look like this:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: text/html
Server: ExampleServer/2.0
Vary: Prefer
]]></artwork></figure>

<t>Note that the Vary response header needs to be sent if the response is cacheable and might change
depending on the value of the “Prefer” header. This is not only true for those responses that are
“safe”, but also the default “unsafe” response.</t>

<t>See <xref target="RFC7234"/> Section 4.1 for more information the interaction between Vary and Web caching.</t>

<t>See <xref target="servers"/> for additional advice specific to Web servers wishing to use “safe”.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t><spanx style="emph">Note to RFC Editor: Please remove this section before publication.</spanx></t>

<t>This section records the status of known implementations of the protocol defined by this
specification at the time of posting of this Internet-Draft. Please note that the listing of any
individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has
been spent to verify the information presented here that was supplied by IETF contributors. This is
not intended as, and must not be construed to be, a catalog of available implementations or their
features. Readers are advised to note that other implementations may exist.</t>

<t><list style="symbols">
  <t>Microsoft Internet Explorer - see https://support.microsoft.com/en-hk/help/2980016/</t>
  <t>Microsoft Bing - see https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/familysearch/</t>
  <t>Mozilla Firefox - see https://support.mozilla.org/en-US/kb/block-and-unblock-websites-parental-controls-firef</t>
  <t>Cisco - see http://blogs.cisco.com/security/filtering-explicit-content</t>
</list></t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The “safe” preference is not a secure mechanism; it can be inserted or removed by intermediaries
with access to the request stream (e.g. for “http” URLs). Therefore, it SHOULD NOT be included in
requests with the “http” scheme.</t>

<t>Its presence reveals limited information about the user, which may be of small assistance in
“fingerprinting” the user by sites. Therefore, user agents SHOULD NOT include it in requests when
the user has expressed a desire to avoid such attacks (e.g., some forms of “private mode” browsing).</t>

<t>By its nature, including “safe” in requests does not assure that all content will actually be safe;
it is only when servers elect to honor it that content might be “safe”.</t>

<t>Even then, a malicious server might adapt content so that it is even less “safe” (by some
definition of the word). As such, this mechanism on its own is not enough to assure that only
“safe” content is seen; those who wish to ensure that will need to combine its use with other
techniques (e.g., content filtering).</t>

<t>Furthermore, the server and user may have differing ideas regarding the semantics of “safe.” As
such, the “safety” of the user’s experience when browsing from site to site as well as over time
might (and probably will) change.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers the “safe” preference <xref target="RFC7240"/>:</t>

<t><list style="symbols">
  <t>Preference: safe</t>
  <t>Value: (no value)</t>
  <t>Description: Indicates that “safe” / “unobjectionable” content is preferred.</t>
  <t>Reference: (this document)</t>
  <t>Notes:</t>
</list></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6265" target='https://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Alissa Cooper, Ilya Grigorik, Emma Llanso, Jeff Hughes, Lorrie Cranor, Doug Turner and
Dave Crocker for their comments.</t>

</section>
<section anchor="browsers" title="Sending “safe” from Web Browsers">

<t>As discussed in <xref target="safe"/>, there are many possible ways for the “safe” preference to be generated.
One possibility is for a Web browser to allow its users to configure the preference to be sent.</t>

<t>When doing so, it is important not to misrepresent the preference as binding to Web sites. For
example, an appropriate setting might be a checkbox with wording such as:</t>

<figure><artwork><![CDATA[
  [] Request "safe" content from Web sites
]]></artwork></figure>

<t>… along with further information available upon request.</t>

<t>Browsers might also allow the “safe” preference to be “locked” – that is, prevent modification
without administrative access, or a passcode.</t>

<t>Note that this specification does not require browsers to send “safe” on all requests, although
that is one possible implementation; e.g., alternate implementation strategies include blacklists
and whitelists.</t>

</section>
<section anchor="servers" title="Supporting “safe” on Web Sites">

<t>Web sites that allow configuration of a “safe” mode (for example, using a cookie) can add support
for the “safe” preference incrementally; since the preference will not be supported by all clients
immediately, it is necessary to have another way to configure it.</t>

<t>When honoring the safe preference, it is important that it not be possible to disable it through
the Web site’s interface, since “safe” may be configured and locked down by the browser or
computer’s administrator (e.g., a parent). If the site has such a means of configuration (e.g.,
stored user preferences) and the safe preference is received in a request, the “safer”
interpretation ought to be used.</t>

<t>The appropriate level of “safety” is a site-specific decision. When selecting it, sites ought to
bear in mind that disabling the preference might be considerably more onerous than through other
means, especially if the preference is generated based upon Operating System configuration.</t>

<t>Sites might offer different levels of “safeness” through Web configuration, they will need to
either inform their users of what level the “safe” hint corresponds to, or provide them with some
means of adjusting it.</t>

<t>If the user expresses a wish to disable “safe” mode, the site can remind them that the safe
preference is being sent, and ask them to consult their administrator (since “safe” might be set by
a locked-down Operating System configuration).</t>

<t>As explained in <xref target="safe"/>, responses that change based upon the presence of the “safe” preference
need to either carry the “Vary: Prefer” response header field, or be uncacheable by shared caches
(e.g., with a “Cache-Control: private” response header field). This is to avoid an unsafe cached
response being served to a client that prefers safe content (or vice versa).</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIANgI0FsAA41aXXMbuXJ9x69A6AdLWyQlO3v3g35IZFleO7Etx5KzlUql
UuAMSOJqZsAAM6K5W97ffk93A8MZSnblxSaHA6A/T59uaDabqda1lV3o243V
k2hWdqLf3N5+1B+DXdlgm8Iqs1wGe78YPNIrH/QNXtYvg99F16xV6YvG1Nio
DGbVzhrftni8MfWMNp1tXNPOzn9WpWnxzvPzZ7+oAh/XPuwX2jUrr5TbhoVu
Qxfb5+fnv54/VyZYs9C/2cYGU6mdD3fr4LvtQt3ZPb6VC6Vnmnan/7cHefGt
2LiqnG2Db23ROt8oFVvTlP9rKt/g/L2NauuwXre+kK9aRx9abBL7721wRZu/
Fb6ubdP2v7qmcnkrrcOqsGVs91X/BBuXdttuFvqZUqZrNz6wvFiIPd7P9Yfe
QnhbazHeexPujn/xYW0a94chPRb8xNbGVQtdw8j/Sv/MG9vyD11wC71p221c
nJ3tdrt5/vVMqcaHGnvc2wVMDYMfvqnZbKbNEvqaolXqduOijltbuJUr+FRd
2hWUjdrkENmOQ4EjJtj/62xso243ptX2C96JkReVNrpgYRJt7r0rlV/+Xdxi
lpWFZZsWlp1qUxTwKjSnN1vEIx/rWAK/km1bG2q93PPPPri1a3S04d6GedKj
dmVZWaWe6LdNG3zZJf+/N81e/26XOroWQm3MvT2oU/vSTlm+GF3EKRsfrd5t
vC5987TVO9O09PPSkl74rdQnUJs3gSQuKA44GCT/fkqvP6onBH3jdxYiT0Wl
tTeVhsn9Cj/r0q1g9q7i8wy2xZtTHFyYDiKxGaxuLCTA72tP/9JeB914U1W7
9aYlebGqnCK67t3atDZb1myRG9vg6NHWrK0+gdTRLau9LpB1FH7aNOyRDqpT
2qx54c7sWbU1Is5AJX/nrP7zz3/59Pryp+c//e3rV7ijRYzzy0sCB9KTYsRC
mfxEw6MidWnvXSFSwjAX8AQCpTYNZGKjsaC0EgaiXQbbkhj8I4UxBHdNSfFK
bj0KT8aIbH59QacFjRPIqeSB2G23SP4Ib5Pi0euT3cbiqKAdGxGmoN3vXdnB
V71aLA8gab3BG+p6C5xiy93sY2tryYrKLYMJMBr7zDcQdMmxsHLrLvCjwqbQ
64JNUQ4tBzq4qEwJc7Uuit8NWxnBwMHMgsCc8FdVyaP5d9N443e0S2mLyvCR
eDPlKDzX57Gh3D0qBvD1P8HXPz//8fzrV5wCrOplfniex2FAINKlgOzVPomA
1MKKlHwuvtAw3IYsCnNjF9QKG7CmtaXaOWws4RQLv+UU4FAaxTsA33sCG06a
Vndb34hEPdT5ho1C7jaunPKOjkOCtuxl4R2qChayTcmREjnXBRIo2OBg3hxp
D1duTLXijEiApx7AXU58ERQn4Ht0pWXnjxBioCshQIeyJ4u/tBkAFan8AnIh
EGHOk2XXsoVNhcyMpw/O6prYuZZ3p0yoHcpAnA+r/SDOKJJbRdsl4OA1nhNh
2wUCNoqs112gR5SqUwRiw5Cddutdvu5MAGraQUT3Hts5xCnBmaN0RNR0xYZ8
H7VdrWAPUIOGRIAhi+CWkAOhOFkiKOkFZOp0orPigsrBVg6vkdvnAP4kM5GE
eBARz9Qoq7CBAA4tZxtB1gaommrQOM7AHwiZxPAIZiuxMC4iiuRyIzcbQlVr
ouMi9ZZ/MxVAxtWEOqm0NINEesw3TsxqDrImvOPYTMugqGJwoyOEBL1ItpBI
lrKQil+KU/Jx13yrJkPp6Gurc4HLlYUxkCPWdw8Aa2kZRy0VuxuoCQNsuzan
N9CrBU4TnaJSTtnlm5RKiPPTrIrgdKpYEhl68nal974L4pINQZR6SsZ6SseR
Q6aS99kM0N3iEL9lZyHhPZvriG3wlsd0wzLbmE/ALJ48IVbGKIKcvPQN0Ja+
RIIUq0FIJdj05P3nm9vJVP7XH67586er//j89tPVK/p88+bi3bv+Q37j5s31
53evDp/kucLKy+v3768+vJLFeKqPHr2/+K+JuGly/fH27fWHi3cTqb8E6r7o
2MxG8Ghph9iKrFKHFMOal5cf9bMfE8Q/f/bsV5Rz+fLLs59/xBdUxUYO40Im
X2GoPdVpawJtQjWoMFuAToXcwxER5aZhPxBHezLEnmFdeUKPvir1OzalWIok
N+2XC9L0W5mR6n485EFGwd3GCXVA6hyxTjyUPQLxowfUc8Qtn8ZHYqOgwr2l
CH9N5feLQZgDD3txEwQ3RdWVLNsjsoN8//XXX+q3q1t9tvJ+vmnriivu2bP5
M9DEiPaDaHzafY5WQH2GTLMLIi8LfSXPXwohwaJzJSZdCOehzXmBsJ2oU3Ql
qb5pUHYiyXFzYANdU6G8CZrsUMwHHGaqCCyb7/AXVEK0LAKxPQOt4DZ6Al8j
/QrUFn1jiWEkghURcVy0ANFqUMfRqxDm5PMTtGdK1O82qOkcS60nNKKmFTnD
qUC2o/SQ6KcOD5sPWJvDJid2vp5TzANCMr+Lwu8ECYV5kFro7MDR1LHyA0a1
NDFVqbTHbIcK0WvC2p1Cyuth9KW47lpXuT++5TMu3UzqcspnR4BzeUD4NJF4
QmyuhEh7IIEzgxc70aO0XIwe7140ANgkyRh/uYASqZutg8F/Jdavg0UTnGlV
u58w9Kfgk9LJiWJi2h3pZVLPAyEEYkaavKANyG8koylLJ1CsalugZLtY956S
niSOmhImaCxj2zWWGw2ECdzAYRzk8zD9cw4j0lAqB1VzY03Zu6TCUQiVO6HQ
KZlz+urn5+f6+t/VLWhQhJtmV03h6YwFQqZr7sBtL8Wms9v9Fr0/0bwzQgB1
w9bt01u+nj1Hdv+noXmJ5Lhk94cRb6DfD6qJsNx5xAT/gqqrpGR6j8gKqE7q
uIjmpMg2zdqiRGwTgRLaq+9N1fWt6ESEmaTDiFoS6xa2wlWiDZ1NvRslSj41
2RCVSUk4T5nTMTNKzT+HxAQUlqM9L6QstodG5J+pMN1IpOofYfcMGUPq37N9
GnE4ZhvtzqLQsMFIZaJ5ZATo2R+Q8i/B0CHq8JG71tztkG2ZJqZ8BTxuUjBR
uIp6UvzeZswRsW7wfwcS8YO40WuopK9wjof7P1ZIEDJY7e9TlxZtFn9FGm67
ZZWarfkPueVLr6DlYkbC0MjHkMvuGirGbiRFzL6keZkvfJW6tFIGLeg+x21d
irXW1RwFaAukKVqJjG/JzI1tZ69oEjjPaowJbuX6RabZq0F3PZaNecOhqxAu
iXBEF9MTSNrv7dXt67kedSYg99ItEEypJXkbegjbhpvcap+i4hAliXZAcz6W
pd2ZyAMCbjBwGp3EaAja1LWpm+KQ586JW8qSyZXAWN1F6VSk7Y+UDqVkI7EF
2BTALIboa+QD/4Q0ZlpZODJQpfyUgIiYHYVjmgwcrCy0/3in2sB8X2B8hOMP
+r0rgo9+1fZOA+ZsK5gv0GgVSZCHiWlEMq/zijnK5ZltZpu7s42ttmfPf/3l
/PzZT2ejXV+Si8cblfbeVlRKH27VxbP+2cyWa3sGUteWwd1bLKt9PFuZ2lX7
CKZZbPgk/wdaSaNfo49Z+S/fklneIvZEx3y+Obtbni0rX9zN4KBZ18jnnV3y
7GS2hU1hsGrGXvZVnK1of5x36WLhB6fgEKxdx3lBP7AeSD9QknZ/tnIV1ddm
PbNfiOq4dpZqKAPBTXqPmglpEwf9xHfaP94fJSnXPS6MqV8WAkJjhZBQgyOW
ca+2pWNGwxMVIrzE5o7KHYLTmloqKWPehLSc6M+f3sVTnhoEBp5hOaeehM9m
SklMSvV8J5ONvE9Ekaktd8ExJVtBp99bwD4woXbCxY6pHm3R8chNGD1F8ZLB
J9ZEVWVsa4RuqQnAa01NDhTHp0m/nIwh47GhKt1Dfkw6ZY7s2hGFo55H9RsS
AcqT7vLhpJsnG8DL1hR3PUHhdpo0ZNydQMx7mlrS+GAifTWEJhb4cs8zkYZT
fpoEGsxahmL1CDkcI3Irllshmrmg+Mn4gpgA9nihpCPvu7m+hAlHgx4b33ge
g8qYLe3Wj5f72nZF88dW+kP4hwLedzETRXnflGZ72CP61CKxCDy/5A4jaXdC
zoKp1MPWi1rt08HkiMtOnxFEU8huXOjEKCC0NKQ9mrKS1ol79EJxAbXNi8EV
AFVzfdTgsDXzFB5pv6ShJh3apaGIwK9qIVTjyEcHeioH9fBwejxRk16GzWby
EIQCnvknXQ/wMg3MQPAFuzahPLRAtUHMF7Efac4nMJPKZrI9Ic+mpN2fcgxj
V85GDoMchnoVfJ3GrD6NwZADlnNOe5KRaEAaCp2QvCARSx55kY1OE4kk8kPs
5+LDxSOA92BwDK2Qz8KzH0PD4RB6QYXsMEhIne8PYHZgqQt9AhrAhPUUz17x
tGPLN2koeaO5QTrljAjnqPUZBUc/M5hju0+HQ09G8xY6ixhdzLdrSwAAGeCi
IAJWUXHj20SeSDd3DMQX4ETRwDxUHaf6bbU3+jc0gj64u6m+qmuj31XoJdDK
/RuIjX6DkKbh/zs0MM7qS/QZHuteIdT1bYdizvGjXlHYXAZUODxYZSbR32fO
UzUaTXHZ68Ro02QB3dSTvilH9wRNUfA6Bj2gEJgyzW6+cogRH5E7nL1Ol0p8
bXS4v3noT+lN1nzT25Jtr5FOshhNL4pkuv0xLNTg/kcm9SnxQpRsTGOJ4ynE
oQGapylTvu7p7x36gWyaLNcuBptnUUfbIf6Xrm8a+5tFkFAf1GEc1Izu2tKM
8oCfNKW1xd0S5IVhY5fGUFI4ck+p9X//D6JNivQRYvW+4uOlKZzP58N2fyXw
Mi6sPdnkcUQqJFR1sssTZlM/Jmb+nu8mRKFsOdEI9nT3MKW37rlaoO/Nua3y
yNiUNWCdLp3p/i4REr7KMnoLmEazbP/fF0wkPhXeHKSMVjRCTvJ6GWnlcknD
EJJivVH5osT3EfeAf7/QaQZEiN2QG496FFYCkGVjzxqWFTKempyoCBRBW1rL
X1O+CTUdpBy2ISfe8O30n09y64lI7e+sc02HK0YTI+4dhrcQ+mQ1HEl2Ue4p
ZDJyymwRzWy+9lTfzktoE0RPkIYXEIMdPs4DKYXS36QdhXYy+0DXRDDnauaf
sME+J1tjyeHUfhPL4BuJJl3bmP04kV2fscxG+mpHs7yDJA+zONOLJF3vXppx
uSidVpuvcNXwiuppuoRcGdpX9M4GNsc3uORgCX8EJEhHakn7u+6gALbbruVK
Owh7mD1PF7X0HKc8XmPd8vWGAAHYjZE+fex5Wa8i9rKJKhwMEk9ZtEdMRWYK
sL+7FwB/bMYeJqq/K0hhlmeMy/7C/vbobwkq6u70YPCX7nugzayflpR0GUwj
C/27UM58lebaaQr1fBTadrlVgNFK8ad4LsfAQKceU0cXbzwJQnIHYqN8vZev
7IWhsWGn2rJ0zI3d6nhn6NDXpuEM98GN/8g5fPdFyohgnohb4m8EimyqA1Fr
kAyTXjaeRg03S9csQ96prBugeirrUgaxKd+wizsGuU1/hjWYeBJOMuTCg/dO
LgRqqRlMvfuoM+Xfu5h8RO3bgTyO/tAnU+WcXeM/r8lhTfgDWBGP2vowFGLm
NrZ7vknMd5Em3qVFDBCRh8as+VFijXM2hwbdESz3yqR8nXG+ft+NxM8vmCFX
Mt4eEZ6jaaaw3WGMpFCSTjfPTI+BVuVWIrm0MCEIiEyGE9/Jg9HuytmqZA9S
TjaHKS41TxtDoMDPokpII82/nlzS09mlDDgWOjWh3zjg9DDV7Ttb+FAGs3JA
qfqV2WXhPv+xilQBsZAoHQWRMoehK2CeqFLNM7D4PwAXudORmSgAAA==

-->

</rfc>

